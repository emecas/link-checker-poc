/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.0/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    //mavenLocal()
}

dependencies {

	compile	'com.opencsv:opencsv:3.10'

	testImplementation 'org.junit.jupiter:junit-jupiter-params:5.3.1'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
		
	testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    
    //TEMPORAL DEPENDENCY TO REMOVE ISSUE   
    //    java.lang.SecurityException%3A+class+"org.junit.platform.engine.support.filter.ExclusionReasonConsumingFilter"'s+signer+information+does+not+match+signer+information+of+other+classes+in+the+same+package
    //SEE: https://github.com/eclipse/buildship/issues/668
    //SOLUTION: https://github.com/eclipse/buildship/issues/668#issuecomment-377945111
    testCompile 'org.junit.platform:junit-platform-launcher:1.1.0' 


	compile 'log4j:log4j:1.2.17'

      
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    //implementation 'com.google.guava:guava:26.0-jre'

    // Use JUnit test framework
    //testImplementation 'junit:junit:4.12'
}


test {
    useJUnitPlatform {
        includeEngines 'junit-jupiter', 'junit-vintage'
    }
    failFast = true
    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }
    afterSuite { desc, result ->
        if (!desc.parent) {
            println "\nTest result: ${result.resultType}"
            println "Test summary: ${result.testCount} tests, " +
                    "${result.successfulTestCount} succeeded, " +
                    "${result.failedTestCount} failed, " +
                    "${result.skippedTestCount} skipped"
        }
    }
}
